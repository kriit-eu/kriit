name: kriit

services:
  app:
    build:
      context: ./php
      dockerfile: Dockerfile
    image: kriit/app
    container_name: kriit_app
    volumes:
      - ../:/var/www/html
    depends_on:
      - db
    networks: [kriit_net]

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: kriit/nginx
    container_name: kriit_nginx
    ports:
      - "8000:80"
    volumes:
      - ../:/var/www/html
    depends_on: [app]
    networks: [kriit_net]

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    image: kriit/db
    container_name: kriit_db
    restart: unless-stopped
    ports:
      - "127.0.0.1:8002:8002"
    environment:
      MYSQL_DATABASE: kriit
      MYSQL_ROOT_PASSWORD: kriitkriit
    volumes:
      - kriit_db_data:/var/lib/mysql
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ../doc/database.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks: [kriit_net]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-P", "8002", "-uroot", "-pkriitkriit"]
      start_period: 30s
      interval: 5s
      timeout: 3s
      retries: 5

  mailhog:
    build:
      context: ./mailhog
      dockerfile: Dockerfile
    image: kriit/mailhog
    container_name: kriit_mailhog
    ports:
      - "8003:8025"   # UI accessible from host
    networks: [kriit_net]

  phpmyadmin:
    build:
      context: ./phpmyadmin
      dockerfile: Dockerfile
    image: kriit/phpmyadmin
    container_name: kriit_phpmyadmin
    restart: unless-stopped
    ports:
      - "8001:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 8002
      PMA_USER: root
      PMA_PASSWORD: kriitkriit
    depends_on: [db]
    networks: [kriit_net]
    stop_grace_period: 1s

networks:
  kriit_net:

volumes:
  kriit_db_data: